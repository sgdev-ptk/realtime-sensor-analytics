version: "3.9"

services:
  api:
    build:
      context: ../
      dockerfile: backend/Dockerfile
    env_file:
      - ../.env
    environment:
      ASPNETCORE_URLS: "https://+;http://+"
      ASPNETCORE_HTTPS_PORTS: 5001
      ASPNETCORE_ENVIRONMENT: Development
      REDIS__CONNECTION: ${REDIS__CONNECTION:-redis:6379}
    ports:
      - "5000:80"
      - "5001:443"
    depends_on:
      - redis
    volumes:
      - ./certs:/https:ro

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - API_BASE=https://localhost:5001
    ports:
      - "4200:4200"
    depends_on:
      - api

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "", "--appendonly", "no", "--maxmemory-policy", "allkeys-lru"]
    volumes:
      - redis-data:/data

  # Optional monitoring stack
  prometheus:
    image: prom/prometheus:latest
    profiles: ["monitoring"]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana-oss:latest
    profiles: ["monitoring"]
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  redis-data:
